version: "3.7"
services:
  anti-fraud-api:
    build:
      context: ./anti-fraud-api
    restart: on-failure
    ports:
      - 8085:3000
    depends_on:
      - kafka
  migration:
    build:  
      context: ./transaction-api
      target: development
    restart: on-failure
    env_file:
      - .env
    command: npm run migrate
    volumes:
      - /usr/src/app/node_modules
    depends_on:
      - postgres
      - transaction-api

  transaction-api:
    image: transaction-api:latest
    build:  
      context: ./transaction-api
    restart: on-failure
    ports:
      - 8080:3000
    env_file:
      - .env
    depends_on:
      - postgres
      - kafka

  postgres:
    hostname: ${DATABASE_HOST}
    image: postgres:14
    ports:
      - "5432:5432"
    environment:
      - POSTGRES_USER=${DATABASE_USER}
      - POSTGRES_PASSWORD=${DATABASE_PASS}
      - POSTGRES_DB=${DATABASE_NAME}
      - PGDATA=/data/postgres
    volumes:
      - db:/data/postgres
  zookeeper:
    image: confluentinc/cp-zookeeper:5.5.3
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
  kafka:
    image: confluentinc/cp-enterprise-kafka:5.5.3
    depends_on: [zookeeper]
    environment:
      KAFKA_ZOOKEEPER_CONNECT: "zookeeper:2181"
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:29092,PLAINTEXT_HOST://kafka:9092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_BROKER_ID: 1
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_JMX_PORT: 9991
    ports:
      - 9092:9092

volumes:
  db:
  scripts: